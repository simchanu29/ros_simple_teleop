key_config:
  # Hardcoded : link to the code
  interpreter_types:
    'switch_teleop':
      # Pour rappel
      'usage': 'No value'
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'String']

    'twist':
      # Pour rappel
      'usage': ['lin_x','lin_y','ang_z']
      'structure': ['type', 'range_lin', 'range_ang', 'precision']
      # Utile pour le code
      'import': ['geometry_msgs.msg', 'Twist']
    'wrench':
      # Pour rappel
      'usage': ['lin_x','lin_y','ang_z']
      'structure': ['type', 'range_lin', 'range_ang', 'precision']
      # Utile pour le code
      'import': ['geometry_msgs.msg', 'Wrench']
    'position':
      # Pour rappel
      'usage': 'position'
      'structure': ['type', 'min', 'max', 'precision']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Float32']
    'int':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Int8']
    'bool_toogle':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Bool']
    'string':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'String']


  # Modifiable
  interpreter_config_map:
    'switch_teleop': # Necessaire
      'type': 'switch_teleop'

    'vel':
      'type': 'twist'
      'range_lin': 1.0
      'range_ang': 1.0
      'precision': 0.2

    'state':
      'type': 'int'

  #  'wrench':
  #    'type': 'wrench'
  #    'range_lin': 10.0
  #    'range_ang': 10.0
  #    'precision': 20.0

  #  'position_servo1':
  #    'type': 'position'
  #    'range': 90.0
  #    'precision': 100.0

  #  'position_servo2':
  #    'type': 'position'
  #    'range': 90.0
  #    'precision': 100.0

  key_map:
    # switch teleop key (ON/OFF)
    't':
      called_interpreter: 'switch_teleop'

    # Twist keys
    ' ':
      called_interpreter: 'vel'
      value: ['STOP','STOP','STOP']
    'r':
      called_interpreter: 'vel'
      value: ['BACK','BACK','BACK']
    'z':
      called_interpreter: 'vel'
      value: [1,0,0]
    's':

      called_interpreter: 'vel'
      value: [-1,0,0]
    'q':
      called_interpreter: 'vel'
      value: [0,0,1]
    'd':
      called_interpreter: 'vel'
      value: [0,0,-1]
    'a':
      called_interpreter: 'vel'
      value: [0,0,1]
    'e':
      called_interpreter: 'vel'
      value: [0,0,-1]

    # Cmd state keys
    'm':
      called_interpreter: 'state'
      value: 0
    'l':
      called_interpreter: 'state'
      value: 1

    # Wrench keys
  #  '5':
  #    called_interpreter: 'wrench'
  #    value: ['STOP','STOP','STOP']
  #  '0':
  #    called_interpreter: 'wrench'
  #    value: ['BACK','BACK','BACK']
  #  '8':
  #    called_interpreter: 'wrench'
  #    value: [1,0,0]
  #  '2':
  #    called_interpreter: 'wrench'
  #    value: [-1,0,0]
  #  '4':
  #    called_interpreter: 'wrench'
  #    value: [0,1,0]
  #  '6':
  #    called_interpreter: 'wrench'
  #    value: [0,-1,0]
  #  '7':
  #    called_interpreter: 'wrench'
  #    value: [0,0,1]
  #  '9':
  #    called_interpreter: 'wrench'
  #    value: [0,0,-1]
  #
  #  # Position keys
  #  'y':
  #    called_interpreter: position_servo1
  #    value: 1
  #  'h':
  #    called_interpreter: position_servo1
  #    value: -1
  #  'g':
  #    called_interpreter: position_servo2
  #    value: 1
  #  'j':
  #    called_interpreter: position_servo2
  #    value: -1

  # Proxy config manette DRAKKAR
  joystick:
    config:
      stick_gauche:
        horizontal:
          twist_axis: 'y'
          gain: 2
        vertical:
          twist_axis: 'x'
          gain: 2
      stick_droit:
        horizontal:
          twist_axis: 'yaw'
          gain: 1
        vertical:
          twist_axis: 'pitch'
          gain: 1
      fleches:
        horizontal:
          twist_axis: 'roll'
          gain: 1
        vertical:
          twist_axis: 'z'
          gain: 1
    axes:
      '0':  # StickGaucheGauche+Droite-
        type: 'stick_gauche'
        axe: 'horizontal'  # horizontal ou vertical
      '1':  # StickGaucheHaut+Bas-
        type: 'stick_gauche'
        axe: 'vertical'  # horizontal ou vertical
      '2':  # -1 = L2
        type: 'axe_button'
        key: None
      '3':  # StickDroiteGauche+Droite-
        type: 'stick_droit'
        axe: 'horizontal'  # horizontal ou vertical
      '4':  # StickDroiteHaut+Bas-
        type: 'stick_droit'
        axe: 'vertical'  # horizontal ou vertical
      '5':  # -1 = R2
        type: 'axe_button'
        key: None
      '6':  # FlecheGauche+Droite-
        type: 'fleches'
        axe: 'horizontal'  # horizontal ou vertical
      '7':  # FlecheHaut+Bas-
        type: 'fleches'
        axe: 'vertical'  # horizontal ou vertical
    buttons:
      '0':  # BoutonDroiteBas
        key: None
      '1':  # BoutonDroiteDroite
        key: None
      '2':  # BoutonDroiteGauche
        key: None
      '3':  # BoutonDroiteHaut
        key: None
      '4':  # L1
        key: None
      '5':  # R1
        key: None
      '6':  # Select
        key: None
      '7':  # Start
        key: 't'
      '8':  # None
        key: None
      '9':  # StickGaucheButton
        key: None
      '10':  # StickDroiteButton
        key: None
