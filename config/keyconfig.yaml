key_config:
  # Hardcoded : link to the code
  interpreter_types:
    'switch_teleop':
      # Pour rappel
      'usage': 'No value'
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'String']

    'twist':
      # Pour rappel
      'usage': ['lin_x','lin_y','ang_z']
      'structure': ['type', 'range_lin', 'range_ang', 'precision']
      # Utile pour le code
      'import': ['geometry_msgs.msg', 'Twist']
    'wrench':
      # Pour rappel
      'usage': ['lin_x','lin_y','ang_z']
      'structure': ['type', 'range_lin', 'range_ang', 'precision']
      # Utile pour le code
      'import': ['geometry_msgs.msg', 'Wrench']
    'position':
      # Pour rappel
      'usage': 'position'
      'structure': ['type', 'min', 'max', 'precision']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Float64']
    'int':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Int8']
    'bool_toogle':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'Bool']
    'string':
      # Pour rappel
      'usage': ['value']
      'structure': ['type']
      # Utile pour le code
      'import': ['std_msgs.msg', 'String']


  # Modifiable
  interpreter_config_map:
    'switch_teleop': # Necessaire
      'type': 'switch_teleop'

    'vel':
      'type': 'twist'
      'range_lin': 1.0
      'range_ang': 1.0
      'precision': 0.2

    'state':
      'type': 'int'

  key_map:
    # switch teleop key (ON/OFF)
    't':
      called_interpreter: 'switch_teleop'

    # Twist keys
    ' ':
      called_interpreter: 'vel'
      value: ['STOP','STOP','STOP']
    'r':
      called_interpreter: 'vel'
      value: ['BACK','BACK','BACK']
    'z':
      called_interpreter: 'vel'
      value: [1,0,0]
    's':

      called_interpreter: 'vel'
      value: [-1,0,0]
    'q':
      called_interpreter: 'vel'
      value: [0,0,1]
    'd':
      called_interpreter: 'vel'
      value: [0,0,-1]
    'a':
      called_interpreter: 'vel'
      value: [0,0,1]
    'e':
      called_interpreter: 'vel'
      value: [0,0,-1]

    # Cmd state keys
    'm':
      called_interpreter: 'state'
      value: 0
    'l':
      called_interpreter: 'state'
      value: 1
